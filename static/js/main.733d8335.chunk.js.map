{"version":3,"sources":["colorHelpers.js","constants.js","styles/ColorBoxStyles.js","ColorBox.js","Navbar.js","Footer.js","Palette.js","seedColors.js","styles/MiniPaletteStyles.js","MiniPalette.js","styles/PaletteListStyles.js","PaletteList.js","SingleColorPalette.js","NewPaletteModal.js","styles/PaletteFormNavStyles.js","PaletteFormNav.js","styles/ColorPickerFormStyles.js","ColorPickerForm.js","DraggableColorBox.js","DraggableColorList.js","styles/NewPaletteFormStyles.js","NewPaletteForm.js","App.js","reportWebVitals.js","index.js"],"names":["levels","generatePalette","starterPalette","newPalette","paletteName","id","emoji","colors","level","hex","numColors","color","scale","chroma","end","darken","getRange","mode","reverse","i","push","name","toLowerCase","replace","rgb","css","rgba","DRAWER_WIDTH","styles","checkLuminance","props","background","luminance","colorboxPropStyles","ColorBox","state","copied","changeCopyState","bind","this","setState","setTimeout","paletteId","isFullPalette","classes","text","onCopy","className","copyText","to","onClick","evt","stopPropagation","Component","withStyles","Navbar","format","open","handleFormatChange","closeSnackbar","target","value","changeFormat","changeLevel","showSlider","deletePalette","defaultValue","step","min","max","onAfterChange","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","toUpperCase","ContentProps","onClose","action","IconButton","PaletteFooter","Palette","palette","history","colorBoxes","map","Footer","seedColors","root","backgroundColor","border","borderRadius","padding","position","overflow","cursor","height","width","miniColor","display","margin","marginBottom","title","justifyContent","alignItems","paddingTop","fontSize","marginLeft","handleClick","miniColorBoxes","style","container","flexDirection","flexWrap","nav","textDecoration","palettes","boxSizing","gridTemplateColumns","gridGap","PaletteList","key","goToPalette","SingleColorPalette","_shades","gatherShades","colorId","shades","allColors","concat","filter","slice","NewPaletteModal","stage","newPaletteName","handleChange","showEmojiPicker","savePalette","paletteInfo","native","ValidatorForm","addValidationRule","every","hideForm","Dialog","DialogTitle","onSelect","onSubmit","DialogContent","DialogContentText","label","fullWidth","validators","errorMessages","DialogActions","Button","variant","type","theme","hide","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","marginRight","navButtons","PaletteFormNav","showForm","formShowing","CssBaseline","AppBar","classNames","Toolbar","disableGutters","handleDrawerOpen","Typography","noWrap","withTheme","picker","marginTop","addButton","colorInput","ColorPickerForm","currentColor","newColorName","handleColorChange","handleSubmit","newColor","addNewColor","isPaletteFull","onChangeComplete","placeholder","disabled","Divider","DraggableColorBox","SortableElement","removeColor","DraggableColorList","SortableContainer","index","drawer","flexShrink","drawerContent","buttons","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","NewPaletteForm","handleDrawerClose","onSortEnd","oldIndex","newIndex","arrayMove","clearColors","addRandomColor","newPaletteInfo","colorName","p","flat","rand","Math","floor","random","length","maxColors","Drawer","anchor","paper","direction","gutterBottom","axis","React","defaultProps","App","savedPalettes","JSON","parse","window","localStorage","getItem","findPalette","find","syncLocalStorage","st","setItem","stringify","exact","path","render","routeProps","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.733d8335.chunk.js","sourcesContent":["import chroma from 'chroma-js'\r\n\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]\r\n\r\nfunction generatePalette(starterPalette) {\r\n    let newPalette = {\r\n        paletteName: starterPalette.paletteName,\r\n        id: starterPalette.id,\r\n        emoji: starterPalette.emoji,\r\n        colors: []\r\n    }\r\n    for (let level of levels) {\r\n        newPalette.colors[level] = []\r\n    }\r\n    for (let color of starterPalette.colors) {\r\n        let scale = generateScale(color.color, 10).reverse()\r\n        for (let i in scale) {\r\n            newPalette.colors[levels[i]].push({\r\n                name: `${color.name} ${levels[i]}`,\r\n                id: color.name.toLowerCase().replace(/ /g, '-'),\r\n                hex: scale[i],\r\n                rgb: chroma(scale[i]).css(),\r\n                rgba: chroma(scale[i]).css().replace('rgb', 'rgba').replace(')', ',1.0)')\r\n            })\r\n        }\r\n    }\r\n    return newPalette\r\n}\r\n\r\nfunction getRange(hex) {\r\n    const end = \"#fff\"\r\n    return [\r\n        chroma(hex).darken(1.4).hex(),\r\n        hex,\r\n        end\r\n    ]\r\n}\r\n\r\nfunction generateScale(hex, numColors) {\r\n    return chroma\r\n        .scale(getRange(hex))\r\n        .mode('lab')\r\n        .colors(numColors)\r\n}\r\n\r\nexport { generatePalette }","// new palette form drawer width\r\nexport const DRAWER_WIDTH = 400","import { XS, SM, MD, LG } from '../constants'\r\nimport chroma from 'chroma-js'\r\nconst styles = {\r\n    checkLuminance: {\r\n        color: props =>\r\n            chroma(props.background).luminance() >= 0.3 ? '#333' : '#eee'\r\n    },\r\n    colorboxPropStyles: {\r\n        background: props => props.background\r\n    },\r\n}\r\nexport default styles","import React, { Component } from 'react'\r\nimport chroma from 'chroma-js'\r\nimport { Link } from 'react-router-dom'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\r\nimport './styles/ColorBox.css'\r\nimport styles from './styles/ColorBoxStyles'\r\n\r\nclass ColorBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            copied: false\r\n        }\r\n        this.changeCopyState = this.changeCopyState.bind(this)\r\n    }\r\n\r\n    changeCopyState() {\r\n        this.setState({ copied: true }, () => {\r\n            setTimeout(() => this.setState({ copied: false }), 1500)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { background, name, id, paletteId, isFullPalette, classes } = this.props\r\n        const { copied } = this.state\r\n        return (\r\n            <CopyToClipboard text={background} onCopy={this.changeCopyState}>\r\n                <div className={`ColorBox ${classes.colorboxPropStyles}`}>\r\n                    <div className={`copy-overlay ${copied && 'show'}`}></div>\r\n                    <div className={`copy-message ${copied && 'show'}`}>\r\n                        <h1>Copied!</h1>\r\n                        <p className={classes.copyText + classes.checkLuminance}>{background}</p>\r\n                    </div>\r\n                    <div className=\"copy-container\">\r\n                        <div className=\"box-content\">\r\n                            <span className={classes.checkLuminance}>{name}</span>\r\n                        </div>\r\n                        <button className={'copy-button ' + classes.checkLuminance}>Copy</button>\r\n                    </div>\r\n                    {isFullPalette && (\r\n                        <Link to={`/palette/${paletteId}/${id}`} onClick={evt => evt.stopPropagation()}>\r\n                            <span className={'see-more ' + classes.checkLuminance}>More</span>\r\n                        </Link>\r\n                    )}\r\n                </div>\r\n            </CopyToClipboard>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorBox)","import React, { Component } from 'react'\r\nimport Slider from 'rc-slider'\r\nimport Select from '@material-ui/core/Select'\r\nimport { Link } from 'react-router-dom'\r\nimport { IconButton, MenuItem } from '@material-ui/core'\r\nimport { Snackbar } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport './styles/Navbar.css'\r\nimport { mergeClasses } from '@material-ui/styles'\r\n\r\nexport default class Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { format: 'hex', open: false }\r\n        this.handleFormatChange = this.handleFormatChange.bind(this)\r\n        this.closeSnackbar = this.closeSnackbar.bind(this)\r\n    }\r\n\r\n    handleFormatChange(evt) {\r\n        this.setState({ format: evt.target.value, open: true }, () => {\r\n            this.props.changeFormat(this.state.format)\r\n        })\r\n    }\r\n\r\n    closeSnackbar() {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    render() {\r\n        const { level, changeLevel, showSlider, deletePalette } = this.props\r\n        const { format } = this.state\r\n        return (\r\n            <header className=\"Navbar\">\r\n                <div className=\"logo\">\r\n                    <Link to=\"/\">reactcolorpicker</Link>\r\n                </div>\r\n                {showSlider && (\r\n                    <div className=\"slider-container\">\r\n                        <span>Level: {level}</span>\r\n                        <div className=\"slider\">\r\n                            <Slider\r\n                                defaultValue={level}\r\n                                step={100}\r\n                                min={100}\r\n                                max={900}\r\n                                onAfterChange={changeLevel} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className=\"right-menu\">\r\n                    <div className=\"select-container\">\r\n                        <Select value={format} onChange={this.handleFormatChange}>\r\n                            <MenuItem value=\"hex\">Hex - #ffffff</MenuItem>\r\n                            <MenuItem value=\"rgb\">rgb - rgb 255, 255, 255</MenuItem>\r\n                            <MenuItem value=\"rgba\">rgba - rgba 255, 255, 255, 1</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"delete\">\r\n                        <DeleteIcon onClick={deletePalette}/>\r\n                    </div>\r\n                </div>\r\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                    open={this.state.open}\r\n                    autoHideDuration={3000}\r\n                    message={<span id=\"message-id\">Format Changed to {format.toUpperCase()}</span>}\r\n                    ContentProps={{\r\n                        'area-describedby': 'message-id'\r\n                    }}\r\n                    onClose={this.closeSnackbar}\r\n                    action={[\r\n                        <IconButton onClick={this.closeSnackbar} color='inherit' key='close' aria-label='close'>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    ]}\r\n                />\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nfunction PaletteFooter(props) {\r\n    const { paletteName, emoji } = props\r\n    return (\r\n        <footer className=\"Palette-footer\">{paletteName}\r\n            <span className=\"emoji\">{emoji}</span>\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default PaletteFooter","import React, { Component } from 'react'\r\nimport ColorBox from './ColorBox'\r\nimport Navbar from './Navbar'\r\nimport 'rc-slider/assets/index.css'\r\nimport './styles/Palette.css'\r\nimport Footer from './Footer'\r\n\r\nexport default class Palette extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            level: 500,\r\n            format: 'hex'\r\n        }\r\n        this.changeLevel = this.changeLevel.bind(this)\r\n        this.changeFormat = this.changeFormat.bind(this)\r\n        this.deletePalette = this.deletePalette.bind(this)\r\n    }\r\n\r\n    changeLevel(level) {\r\n        this.setState({ level })\r\n    }\r\n\r\n    changeFormat(format) {\r\n        this.setState({ format })\r\n    }\r\n\r\n    deletePalette(){\r\n        this.props.deletePalette(this.props.palette.id)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        const { colors, paletteName, emoji, id } = this.props.palette\r\n        const { level, format } = this.state\r\n\r\n        const colorBoxes = colors[level].map(color => (\r\n            <ColorBox\r\n                background={color[format]}\r\n                name={color.name}\r\n                key={color.id}\r\n                id={color.id}\r\n                paletteId={id}\r\n                isFullPalette={true} />\r\n        ))\r\n        return (\r\n            <div className=\"Palette\">\r\n                <Navbar\r\n                    changeLevel={this.changeLevel}\r\n                    level={level}\r\n                    changeFormat={this.changeFormat} \r\n                    deletePalette={this.deletePalette}\r\n                    showSlider={true}/>\r\n                <div className=\"Palette-colors\">\r\n                    {colorBoxes}\r\n                </div>\r\n                <Footer paletteName={paletteName} emoji={emoji}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const seedColors = [\r\n    {\r\n        paletteName: \"Material UI Colors\",\r\n        id: \"material-ui-colors\",\r\n        emoji: \"🎨\",\r\n        colors: [\r\n            { name: \"red\", color: \"#F44336\" },\r\n            { name: \"pink\", color: \"#E91E63\" },\r\n            { name: \"purple\", color: \"#9C27B0\" },\r\n            { name: \"deeppurple\", color: \"#673AB7\" },\r\n            { name: \"indigo\", color: \"#3F51B5\" },\r\n            { name: \"blue\", color: \"#2196F3\" },\r\n            { name: \"lightblue\", color: \"#03A9F4\" },\r\n            { name: \"cyan\", color: \"#00BCD4\" },\r\n            { name: \"teal\", color: \"#009688\" },\r\n            { name: \"green\", color: \"#4CAF50\" },\r\n            { name: \"lightgreen\", color: \"#8BC34A\" },\r\n            { name: \"lime\", color: \"#CDDC39\" },\r\n            { name: \"yellow\", color: \"#FFEB3B\" },\r\n            { name: \"amber\", color: \"#FFC107\" },\r\n            { name: \"orange\", color: \"#FF9800\" },\r\n            { name: \"deeporange\", color: \"#FF5722\" },\r\n            { name: \"brown\", color: \"#795548\" },\r\n            { name: \"grey\", color: \"#9E9E9E\" },\r\n            { name: \"bluegrey\", color: \"#607D8B\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors v1\",\r\n        id: \"flat-ui-colors-v1\",\r\n        emoji: \"🤙\",\r\n        colors: [\r\n            { name: \"Turquoise\", color: \"#1abc9c\" },\r\n            { name: \"Emerald\", color: \"#2ecc71\" },\r\n            { name: \"PeterRiver\", color: \"#3498db\" },\r\n            { name: \"Amethyst\", color: \"#9b59b6\" },\r\n            { name: \"WetAsphalt\", color: \"#34495e\" },\r\n            { name: \"GreenSea\", color: \"#16a085\" },\r\n            { name: \"Nephritis\", color: \"#27ae60\" },\r\n            { name: \"BelizeHole\", color: \"#2980b9\" },\r\n            { name: \"Wisteria\", color: \"#8e44ad\" },\r\n            { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n            { name: \"SunFlower\", color: \"#f1c40f\" },\r\n            { name: \"Carrot\", color: \"#e67e22\" },\r\n            { name: \"Alizarin\", color: \"#e74c3c\" },\r\n            { name: \"Clouds\", color: \"#ecf0f1\" },\r\n            { name: \"Concrete\", color: \"#95a5a6\" },\r\n            { name: \"Orange\", color: \"#f39c12\" },\r\n            { name: \"Pumpkin\", color: \"#d35400\" },\r\n            { name: \"Pomegranate\", color: \"#c0392b\" },\r\n            { name: \"Silver\", color: \"#bdc3c7\" },\r\n            { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors Dutch\",\r\n        id: \"flat-ui-colors-dutch\",\r\n        emoji: \"🇳🇱\",\r\n        colors: [\r\n            { name: \"Sunflower\", color: \"#FFC312\" },\r\n            { name: \"Energos\", color: \"#C4E538\" },\r\n            { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n            { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n            { name: \"BaraRose\", color: \"#ED4C67\" },\r\n            { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n            { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n            { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n            { name: \"LavenderTea\", color: \"#D980FA\" },\r\n            { name: \"VerryBerry\", color: \"#B53471\" },\r\n            { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n            { name: \"PixelatedGrass\", color: \"#009432\" },\r\n            { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n            { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n            { name: \"HollyHock\", color: \"#833471\" },\r\n            { name: \"RedPigment\", color: \"#EA2027\" },\r\n            { name: \"TurkishAqua\", color: \"#006266\" },\r\n            { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n            { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n            { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors American\",\r\n        id: \"flat-ui-colors-american\",\r\n        emoji: \"🇺🇸\",\r\n        colors: [\r\n            { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n            { name: \"FadedPoster\", color: \"#81ecec\" },\r\n            { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n            { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n            { name: \"CityLights\", color: \"#dfe6e9\" },\r\n            { name: \"MintLeaf\", color: \"#00b894\" },\r\n            { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n            { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n            { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n            { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n            { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n            { name: \"FirstDate\", color: \"#fab1a0\" },\r\n            { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n            { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n            { name: \"AmericanRiver\", color: \"#636e72\" },\r\n            { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n            { name: \"OrangeVille\", color: \"#e17055\" },\r\n            { name: \"Chi-Gong\", color: \"#d63031\" },\r\n            { name: \"PrunusAvium\", color: \"#e84393\" },\r\n            { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors Aussie\",\r\n        id: \"flat-ui-colors-aussie\",\r\n        emoji: \"🇦🇺\",\r\n        colors: [\r\n            { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n            { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n            { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n            { name: \"JuneBud\", color: \"#badc58\" },\r\n            { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n            { name: \"Turbo\", color: \"#f9ca24\" },\r\n            { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n            { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n            { name: \"PureApple\", color: \"#6ab04c\" },\r\n            { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n            { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n            { name: \"Heliotrope\", color: \"#e056fd\" },\r\n            { name: \"ExodusFruit\", color: \"#686de0\" },\r\n            { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n            { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n            { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n            { name: \"SteelPink\", color: \"#be2edd\" },\r\n            { name: \"Blurple\", color: \"#4834d4\" },\r\n            { name: \"DeepCove\", color: \"#130f40\" },\r\n            { name: \"WizardGrey\", color: \"#535c68\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors British\",\r\n        id: \"flat-ui-colors-british\",\r\n        emoji: \"🇬🇧\",\r\n        colors: [\r\n            { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n            { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n            { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n            { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n            { name: \"Seabrook\", color: \"#487eb0\" },\r\n            { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n            { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n            { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n            { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n            { name: \"Naval\", color: \"#40739e\" },\r\n            { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n            { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n            { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n            { name: \"MazarineBlue\", color: \"#273c75\" },\r\n            { name: \"BlueNights\", color: \"#353b48\" },\r\n            { name: \"HarleyOrange\", color: \"#c23616\" },\r\n            { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n            { name: \"ChainGangGrey\", color: \"#718093\" },\r\n            { name: \"PicoVoid\", color: \"#192a56\" },\r\n            { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors Spanish\",\r\n        id: \"flat-ui-colors-spanish\",\r\n        emoji: \"🇪🇸\",\r\n        colors: [\r\n            { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n            { name: \"C64Purple\", color: \"#706fd3\" },\r\n            { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n            { name: \"SummerSky\", color: \"#34ace0\" },\r\n            { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n            { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n            { name: \"Liberty\", color: \"#474787\" },\r\n            { name: \"HotStone\", color: \"#aaa69d\" },\r\n            { name: \"DevilBlue\", color: \"#227093\" },\r\n            { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n            { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n            { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n            { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n            { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n            { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n            { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n            { name: \"ChileanFire\", color: \"#cd6133\" },\r\n            { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n            { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n            { name: \"Desert\", color: \"#ccae62\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors Indian\",\r\n        id: \"flat-ui-colors-indian\",\r\n        emoji: \"🇮🇳\",\r\n        colors: [\r\n            { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n            { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n            { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n            { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n            { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n            { name: \"RichGardenia\", color: \"#F97F51\" },\r\n            { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n            { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n            { name: \"Keppel\", color: \"#58B19F\" },\r\n            { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n            { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n            { name: \"BlueBell\", color: \"#3B3B98\" },\r\n            { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n            { name: \"OasisStream\", color: \"#9AECDB\" },\r\n            { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n            { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n            { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n            { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n            { name: \"PineGlade\", color: \"#BDC581\" },\r\n            { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n        ]\r\n    },\r\n    {\r\n        paletteName: \"Flat UI Colors French\",\r\n        id: \"flat-ui-colors-french\",\r\n        emoji: \"🇫🇷\",\r\n        colors: [\r\n            { name: \"FlatFlesh\", color: \"#fad390\" },\r\n            { name: \"MelonMelody\", color: \"#f8c291\" },\r\n            { name: \"Livid\", color: \"#6a89cc\" },\r\n            { name: \"Spray\", color: \"#82ccdd\" },\r\n            { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n            { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n            { name: \"MandarinRed\", color: \"#e55039\" },\r\n            { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n            { name: \"Dupain\", color: \"#60a3bc\" },\r\n            { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n            { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n            { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n            { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n            { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n            { name: \"Waterfall\", color: \"#38ada9\" },\r\n            { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n            { name: \"JalapenoRed\", color: \"#b71540\" },\r\n            { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n            { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n            { name: \"ReefEncounter\", color: \"#079992\" }\r\n        ]\r\n    }\r\n]\r\n\r\nexport default seedColors","const styles = {\r\n    root: {\r\n        backgroundColor: 'white',\r\n        border: '1px solid black',\r\n        borderRadius: '5px',\r\n        padding: '0.5rem',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        '&:hover': {\r\n            cursor: 'pointer'\r\n        }\r\n    },\r\n    colors: {\r\n        backgroundColor: '#f2f2f2',\r\n        height: '150px',\r\n        width: '100%',\r\n        borderRadius: '5px',\r\n        overflow: 'hidden'\r\n    },\r\n    miniColor: {\r\n        height: '25%',\r\n        width: '20%',\r\n        display: 'inline-block',\r\n        margin: '0 auto',\r\n        position: 'relative',\r\n        marginBottom: '-6px'\r\n    },\r\n    title: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        margin: '0',\r\n        paddingTop: '0.5rem',\r\n        color: 'black',\r\n        fontSize: '1rem',\r\n        position: 'relative',\r\n    },\r\n    emoji: {\r\n        marginLeft: '0.5rem',\r\n        fontSize: '1.5rem'\r\n    },\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport styles from './styles/MiniPaletteStyles'\r\n\r\nfunction MiniPalette(props) {\r\n    const { classes, colors, emoji, id, paletteName, handleClick } = props\r\n    const miniColorBoxes = colors.map(color => (\r\n        <div key={id} className={classes.miniColor} style={{ backgroundColor: color.color }}></div>\r\n    ))\r\n\r\n    return (\r\n        <div className={classes.root} onClick={handleClick}>\r\n            <div className={classes.colors}>\r\n                {miniColorBoxes}\r\n            </div>\r\n            <h5 className={classes.title}>\r\n                {paletteName} <span className={classes.emoji}>{emoji}</span>\r\n            </h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MiniPalette)","const styles = {\r\n    root: {\r\n        backgroundColor: '#394bad',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center'\r\n    },\r\n    container: {\r\n        width: '50%',\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap'\r\n    },\r\n    nav: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        '& a': {\r\n            textDecoration: 'none',\r\n            color: 'white'\r\n        }\r\n    },\r\n    palettes: {\r\n        width: '100%',\r\n        boxSizing: 'border-box',\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(3, 30%)',\r\n        gridGap: '5%',\r\n    }\r\n}\r\n\r\nexport default styles","import React, { Component } from 'react'\r\nimport MiniPalette from './MiniPalette'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './styles/PaletteListStyles'\r\n\r\n\r\nclass PaletteList extends Component {\r\n    goToPalette(id) {\r\n        this.props.history.push('/palette/' + id)\r\n    }\r\n\r\n    render() {\r\n        const { palettes, classes } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.container}>\r\n                    <nav className={classes.nav}>\r\n                        <h1>React Colors</h1>\r\n                        <Link to=\"/palette/new\">Create New Palette</Link>\r\n                    </nav>\r\n                    <div className={classes.palettes}>\r\n                        {palettes.map(palette => (\r\n                            <MiniPalette {...palette} key={palette.id} handleClick={() => this.goToPalette(palette.id)} />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PaletteList)","import React, { Component } from 'react'\r\nimport ColorBox from './ColorBox'\r\nimport Navbar from './Navbar'\r\nimport Footer from './Footer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class SingleColorPalette extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this._shades = this.gatherShades(this.props.palette, this.props.colorId)\r\n        this.state = {\r\n            format: 'hex'\r\n        }\r\n        this.changeFormat = this.changeFormat.bind(this)\r\n    }\r\n\r\n    gatherShades(palette, colorId) {\r\n        let shades = []\r\n        let allColors = palette.colors\r\n        for (let key in allColors) {\r\n            shades = shades.concat(\r\n                allColors[key].filter(color => color.id === colorId)\r\n            )\r\n        }\r\n        return shades.slice(1)\r\n    }\r\n\r\n    changeFormat(format) {\r\n        this.setState({ format })\r\n    }\r\n\r\n    render() {\r\n        const { format } = this.state\r\n        const { paletteName, emoji, id } = this.props.palette\r\n        const colorBoxes = this._shades.map(color => (\r\n            <ColorBox key={color.name} name={color.name} background={color[format]} isFullPalette={false} />\r\n        ))\r\n        return (\r\n            <div className=\"Palette SingleColorPalette\">\r\n                <Navbar\r\n                    showSlider={false}\r\n                    changeFormat={this.changeFormat} />\r\n                <div className=\"Palette-colors\">\r\n                    {colorBoxes}\r\n                    <div className=\"go-back ColorBox\">\r\n                        <Link to={`/palette/${id}`} className=\"back-button\">\r\n                            Go Back\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <Footer paletteName={paletteName} emoji={emoji} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport { Picker } from 'emoji-mart'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\n\r\n\r\nexport default class NewPaletteModal extends Component {\r\n    state = {\r\n        stage: 'form',\r\n        newPaletteName: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isPaletteUnique', (value) => (\r\n            this.props.palettes.every(\r\n                ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n            )\r\n        ))\r\n\r\n    }\r\n\r\n    handleChange = (evt) => {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    showEmojiPicker = () => {\r\n        this.setState({ stage: 'emoji' })\r\n    }\r\n\r\n    savePalette = (emoji) => {\r\n        const paletteInfo = {\r\n            paletteName: this.state.newPaletteName,\r\n            emoji: emoji.native\r\n        }\r\n        this.props.savePalette(paletteInfo)\r\n    }\r\n\r\n    render() {\r\n        const { newPaletteName } = this.state\r\n        const { hideForm } = this.props\r\n        return (\r\n            <div>\r\n                <Dialog open={this.state.stage === 'emoji'}>\r\n                    <DialogTitle id=\"form-dialog-title\">Pick an Emoji</DialogTitle>\r\n                    <Picker onSelect={this.savePalette} title=\"Pick an Emoji\" />\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.stage === 'form'}\r\n                    onClose={hideForm}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                    <ValidatorForm onSubmit={this.showEmojiPicker}>\r\n                        <DialogTitle id=\"form-dialog-title\">Choose Palette Name</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                Please enter a unique name for your new beautiful palette.\r\n                            </DialogContentText>\r\n                            <TextValidator\r\n                                value={newPaletteName}\r\n                                name=\"newPaletteName\"\r\n                                label=\"Palette Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                onChange={this.handleChange}\r\n                                validators={[\r\n                                    'required',\r\n                                    'isPaletteUnique'\r\n                                ]}\r\n                                errorMessages={[\r\n                                    'palette name required',\r\n                                    'palette name already taken'\r\n                                ]} />\r\n                            <DialogActions>\r\n                                <Button onClick={hideForm} color=\"primary\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                                    Save Palette\r\n                                </Button>\r\n                            </DialogActions>\r\n                        </DialogContent>\r\n                    </ValidatorForm>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","import { DRAWER_WIDTH } from \"../constants\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${DRAWER_WIDTH}px)`,\r\n        marginLeft: DRAWER_WIDTH,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 20,\r\n    },\r\n    navButtons: {\r\n        marginRight: '1rem',\r\n        '& button': {\r\n            margin: '0 0.5rem',\r\n        },\r\n        '& a': {\r\n            textDecoration: 'none'\r\n        }\r\n    },\r\n    [`@media (max-width: 992px)`]: {\r\n\r\n    },\r\n    [`@media (max-width: 576px)`]: {\r\n        root: {\r\n            '& h6:after': {\r\n                fontSize: '1rem',\r\n            }\r\n        },\r\n        navButtons: {\r\n            marginRight: '0.2rem',\r\n            '& button': {\r\n                margin: '0 0.3rem',\r\n                padding: '5px',\r\n                fontSize: '0.8rem'\r\n            },\r\n        },\r\n        menuButton: {\r\n            marginLeft: 6,\r\n            marginRight: 0,\r\n        },\r\n    }\r\n\r\n})\r\n\r\nexport default styles","import React, { Component } from 'react'\r\nimport classNames from 'classnames';\r\nimport { Button } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport { Link } from 'react-router-dom';\r\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NewPaletteModal from './NewPaletteModal';\r\nimport styles from './styles/PaletteFormNavStyles'\r\n\r\n\r\nclass PaletteFormNav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formShowing: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    showForm = () => {\r\n        this.setState({ formShowing: true })\r\n    }\r\n\r\n    hideForm = () => {\r\n        this.setState({ formShowing: false })\r\n    }\r\n\r\n    render() {\r\n        const { classes, open, palettes, savePalette } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n                    color=\"default\"\r\n                    position=\"fixed\"\r\n                    className={classNames(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar disableGutters={!open}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.props.handleDrawerOpen}\r\n                            className={classNames(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <AddToPhotosIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                            Create New Palette\r\n                        </Typography>\r\n                    </Toolbar>\r\n                    <div className={classes.navButtons}>\r\n                        <Link to='/'>\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                                Go Back\r\n                            </Button>\r\n                        </Link>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.showForm}>\r\n                            Save\r\n                        </Button>\r\n                        {this.state.formShowing && <NewPaletteModal palettes={palettes} savePalette={savePalette} hideForm={this.hideForm} />}\r\n                    </div>\r\n                </AppBar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(PaletteFormNav)","const styles = {\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    picker: {\r\n        width: '100% !important',\r\n        marginTop: '2rem'\r\n    },\r\n    addButton: {\r\n        width: '100%',\r\n        marginTop: ' 1rem',\r\n        padding: '0.5rem',\r\n        fontSize: '1.2rem',\r\n    },\r\n    colorInput: {\r\n        width: '100%',\r\n        marginTop: '2rem',\r\n        marginBottom: '1.4rem',\r\n    }\r\n}\r\n\r\nexport default styles","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { ChromePicker } from 'react-color'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles/ColorPickerFormStyles'\r\n\r\nclass ColorPickerForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentColor: '#4AAAAA',\r\n            newColorName: '',\r\n        }\r\n        this.handleColorChange = this.handleColorChange.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('isColorNameUnique', (value) => (\r\n            this.props.colors.every(\r\n                ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n            )\r\n        ))\r\n        ValidatorForm.addValidationRule('isColorUnique', (value) => (\r\n            this.props.colors.every(\r\n                ({ color }) => color !== this.state.currentColor\r\n            )\r\n        ))\r\n    }\r\n\r\n    handleColorChange(color) {\r\n        this.setState({ currentColor: color.hex })\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    handleSubmit() {\r\n        const newColor = {\r\n            color: this.state.currentColor,\r\n            name: this.state.newColorName\r\n        }\r\n        this.props.addNewColor(newColor)\r\n        this.setState({ newColorName: '' })\r\n    }\r\n\r\n    render() {\r\n        const { isPaletteFull, classes } = this.props\r\n        const { currentColor, newColorName } = this.state\r\n        return (\r\n            <div className={classes.root}>\r\n                <ChromePicker onChangeComplete={(newColor) => this.handleColorChange(newColor)} color={currentColor} className={classes.picker} />\r\n                <ValidatorForm\r\n                    onSubmit={this.handleSubmit}\r\n\r\n                >\r\n                    <TextValidator\r\n                        value={newColorName}\r\n                        name=\"newColorName\"\r\n                        variant=\"filled\"\r\n                        placeholder=\"Color Name\"\r\n                        onChange={this.handleChange}\r\n                        className={classes.colorInput}\r\n                        validators={[\r\n                            'required',\r\n                            'isColorNameUnique',\r\n                            'isColorUnique']}\r\n                        errorMessages={[\r\n                            'enter color name',\r\n                            'colorname already taken',\r\n                            'color already added']} />\r\n                    <Button\r\n                        style={{ background: isPaletteFull ? 'rgba(0, 0, 0, 0.26)' : currentColor }} variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isPaletteFull}\r\n                        className={classes.addButton}>\r\n                        {isPaletteFull ? 'Palette Full' : 'Add Color'}\r\n                    </Button>\r\n                </ValidatorForm>\r\n                <Divider />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ColorPickerForm)","import React from 'react'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport './styles/DraggableColorBox.css'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { SortableElement } from 'react-sortable-hoc'\r\n\r\nconst styles = {\r\n    root: {\r\n        backgroundColor: props =>\r\n            props.color\r\n    },\r\n}\r\n\r\nconst DraggableColorBox = SortableElement((props) => {\r\n    return (\r\n        <div className={`DraggableColorBox ${props.classes.root}`}>\r\n            <div className=\"box-content\">\r\n                <span>{props.name}</span>\r\n                <DeleteIcon\r\n                    onClick={props.removeColor}\r\n                    className=\"delete-icon\" />\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withStyles(styles)(DraggableColorBox)","import React from 'react'\r\nimport { SortableContainer } from 'react-sortable-hoc'\r\nimport DraggableColorBox from './DraggableColorBox'\r\n\r\nconst DraggableColorList = SortableContainer((props) => {\r\n    return (\r\n        <div style={{ height: '100%' }}>\r\n            {props.colors.map((color, i) => (\r\n                <DraggableColorBox removeColor={() => props.removeColor(color.name)} key={color.name} index={i} color={color.color} name={color.name} />\r\n            ))}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default DraggableColorList","import { DRAWER_WIDTH } from \"../constants\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: DRAWER_WIDTH,\r\n        flexShrink: 0,\r\n    },\r\n    drawerContent: {\r\n        width: '90%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        margin: '0 auto'\r\n    },\r\n    buttons: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        '& button': {\r\n            width: '49%'\r\n        }\r\n    },\r\n    drawerPaper: {\r\n        width: DRAWER_WIDTH,\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: 0,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -DRAWER_WIDTH,\r\n        height: 'calc(100vh - 64px)',\r\n        marginTop: '64px'\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n});\r\n\r\nexport default styles","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport PaletteFormNav from './PaletteFormNav';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { Button } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ColorPickerForm from './ColorPickerForm';\r\nimport DraggableColorList from './DraggableColorList';\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport styles from './styles/NewPaletteFormStyles'\r\n\r\n\r\nclass NewPaletteForm extends React.Component {\r\n    static defaultProps = {\r\n        maxColors: 20\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            open: true,\r\n            colors: this.props.palettes[0].colors,\r\n        }\r\n        this.addNewColor = this.addNewColor.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.savePalette = this.savePalette.bind(this)\r\n        this.removeColor = this.removeColor.bind(this)\r\n        this.clearColors = this.clearColors.bind(this)\r\n        this.addRandomColor = this.addRandomColor.bind(this)\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    handleChange(evt) {\r\n        this.setState({ [evt.target.name]: evt.target.value })\r\n    }\r\n\r\n    addNewColor(newColor) {\r\n        this.setState({ colors: [...this.state.colors, newColor], newColorName: '' })\r\n    }\r\n\r\n    savePalette(newPaletteInfo) {\r\n        const { paletteName, emoji } = newPaletteInfo\r\n        const newPalette = {\r\n            paletteName: paletteName,\r\n            id: paletteName.toLowerCase().replace(' ', '-'),\r\n            colors: this.state.colors,\r\n            emoji: emoji\r\n        }\r\n        this.props.savePalette(newPalette)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    removeColor(colorName) {\r\n        this.setState({\r\n            colors: this.state.colors.filter(color => color.name !== colorName)\r\n        })\r\n    }\r\n\r\n    clearColors() {\r\n        this.setState({ colors: [] })\r\n    }\r\n\r\n    addRandomColor() {\r\n        const allColors = this.props.palettes.map(p => p.colors).flat()\r\n        let rand = Math.floor(Math.random() * allColors.length)\r\n        this.setState({\r\n            colors: [...this.state.colors, allColors[rand]]\r\n        })\r\n    }\r\n\r\n    onSortEnd = ({ oldIndex, newIndex }) => {\r\n        this.setState(({ colors }) => ({\r\n            colors: arrayMove(colors, oldIndex, newIndex)\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        const { classes, theme, maxColors, palettes } = this.props;\r\n        const { open, colors, currentColor, newColorName } = this.state;\r\n        const isPaletteFull = colors.length >= maxColors\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <PaletteFormNav\r\n                    open={open}\r\n                    palettes={palettes}\r\n                    savePalette={this.savePalette}\r\n                    handleDrawerOpen={this.handleDrawerOpen} />\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                        </IconButton>\r\n                    </div>\r\n                    < Divider />\r\n                    <div className={classes.drawerContent}>\r\n\r\n                        <Typography variant=\"h4\" gutterBottom>Design Your Color</Typography>\r\n                        <div className={classes.buttons}>\r\n                            <Button variant=\"contained\" color='secondary' onClick={this.clearColors}>\r\n                                Clear Palette\r\n                            </Button>\r\n                            <Button variant=\"contained\" color='primary' onClick={this.addRandomColor} disabled={isPaletteFull}>\r\n                                Random Color\r\n                            </Button>\r\n                        </div>\r\n\r\n                        <ColorPickerForm\r\n                            isPaletteFull={isPaletteFull}\r\n                            colors={colors}\r\n                            addNewColor={this.addNewColor} />\r\n                    </div>\r\n\r\n                </Drawer>\r\n                <main\r\n                    className={classNames(classes.content, {\r\n                        [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    {/* <div className={classes.drawerHeader} /> */}\r\n                    <DraggableColorList\r\n                        colors={colors}\r\n                        removeColor={this.removeColor}\r\n                        axis='xy'\r\n                        onSortEnd={this.onSortEnd} />\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNewPaletteForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './styles/App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { generatePalette } from './colorHelpers';\r\nimport Palette from './Palette';\r\nimport seedColors from './seedColors';\r\nimport PaletteList from './PaletteList';\r\nimport SingleColorPalette from './SingleColorPalette';\r\nimport NewPaletteForm from './NewPaletteForm';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const savedPalettes = JSON.parse(window.localStorage.getItem('palettes'))\r\n    this.state = {\r\n      palettes: savedPalettes || seedColors\r\n    }\r\n    this.findPalette = this.findPalette.bind(this)\r\n    this.savePalette = this.savePalette.bind(this)\r\n    this.deletePalette = this.deletePalette.bind(this)\r\n  }\r\n\r\n  findPalette(id) {\r\n    return this.state.palettes.find(function (palette) {\r\n      return palette.id === id\r\n    })\r\n  }\r\n\r\n  savePalette(newPalette) {\r\n    this.setState({\r\n      palettes: [...this.state.palettes, newPalette]\r\n    },\r\n      this.syncLocalStorage)\r\n  }\r\n\r\n  deletePalette(id) {\r\n    this.setState(st => ({\r\n      palettes: st.palettes.filter(palette => palette.id !== id)\r\n    }), this.syncLocalStorage)\r\n  }\r\n\r\n  syncLocalStorage() {\r\n    window.localStorage.setItem('palettes', JSON.stringify(this.state.palettes))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path='/palette/new'\r\n            render={(routeProps) => <NewPaletteForm savePalette={this.savePalette} {...routeProps} palettes={this.state.palettes} />} />\r\n          <Route\r\n            exact\r\n            path='/'\r\n            render={(routeProps) => <PaletteList palettes={this.state.palettes} {...routeProps} />} />\r\n          <Route\r\n            exact\r\n            path='/palette/:id'\r\n            render={(routeProps) =>\r\n              <Palette\r\n                palette={generatePalette(\r\n                  this.findPalette(routeProps.match.params.id))}\r\n                deletePalette={this.deletePalette}\r\n                {...routeProps} />\r\n            } />\r\n          <Route\r\n            exact\r\n            path='/palette/:paletteId/:colorId'\r\n            render={(routeProps) =>\r\n              <SingleColorPalette\r\n                colorId={routeProps.match.params.colorId}\r\n                palette={generatePalette(\r\n                  this.findPalette(routeProps.match.params.paletteId))} />} />\r\n        </Switch>\r\n        {/* <Palette palette={generatePalette(seedColors[4])} /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}